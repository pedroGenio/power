openapi: 3.0.0
info:
  contact:
    email: support+coalfired@practiv.com
    name: Practiv Support
  description: This API contains a catalog of CoalFired's products and pricing
  title: CoalFired product catalog
  version: "1.0"
servers:
- url: http://localhost:3000/platform/productCatalogManagement/v4
tags:
- name: catalog
- name: category
- name: productOffering
- name: productOfferingPrice
- name: productSpecification
- name: notification listeners (client side)
- name: events subscription
paths:
  /catalog:
    get:
      description: This operation list or find Catalog entities
      operationId: listCatalog
      parameters:
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Requested index for start of resources to be provided in response
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Requested number of resources to be provided in response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Catalog'
                type: array
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: Actual number of items returned in the response body
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: List or find Catalog objects
      tags:
      - catalog
      x-accepts: application/json;charset=utf-8
  /catalog/{id}:
    get:
      description: This operation retrieves a Catalog entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveCatalog
      parameters:
      - description: Identifier of the Catalog
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated properties to provide in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieves a Catalog by ID
      tags:
      - catalog
      x-accepts: application/json;charset=utf-8
  /category:
    get:
      description: This operation list or find Category entities
      operationId: listCategory
      parameters:
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Requested index for start of resources to be provided in response
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Requested number of resources to be provided in response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: Actual number of items returned in the response body
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: List or find Category objects
      tags:
      - category
      x-accepts: application/json;charset=utf-8
  /category/{id}:
    get:
      description: This operation retrieves a Category entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveCategory
      parameters:
      - description: Identifier of the Category
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated properties to provide in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Category'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieves a Category by ID
      tags:
      - category
      x-accepts: application/json;charset=utf-8
  /productOffering:
    get:
      description: This operation list or find ProductOffering entities
      operationId: listProductOffering
      parameters:
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Requested index for start of resources to be provided in response
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Requested number of resources to be provided in response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ProductOffering'
                type: array
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: Actual number of items returned in the response body
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: List or find ProductOffering objects
      tags:
      - productOffering
      x-accepts: application/json;charset=utf-8
  /productOffering/{id}:
    get:
      description: This operation retrieves a ProductOffering entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrieveProductOffering
      parameters:
      - description: Identifier of the ProductOffering
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated properties to provide in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                block-256-offer:
                  value:
                    id: block-256-offer
                    href: /platform/productCatalogManagement/v4/productOffering/block-256-offer
                    description: string
                    lifecycleStatus: active
                    name: string
                    version: "1"
                    productOfferingPrice:
                    - id: block-256-offer-price
                      href: /platform/productCatalogManagement/v4/productOfferingPrice/block-256-offer-price
                    validFor:
                      endDateTime: null
                      startDateTime: 2019-08-24T14:15:22Z
              schema:
                $ref: '#/components/schemas/ProductOffering'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieves a ProductOffering by ID
      tags:
      - productOffering
      x-accepts: application/json;charset=utf-8
  /productOfferingPrice:
    get:
      description: This operation list or find ProductOfferingPrice entities
      operationId: listProductOfferingPrice
      parameters:
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Requested index for start of resources to be provided in response
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Requested number of resources to be provided in response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ProductOfferingPrice'
                type: array
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: Actual number of items returned in the response body
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: List or find ProductOfferingPrice objects
      tags:
      - productOfferingPrice
      x-accepts: application/json;charset=utf-8
  /productOfferingPrice/{id}:
    get:
      description: This operation retrieves a ProductOfferingPrice entity. Attribute
        selection is enabled for all first level attributes.
      operationId: retrieveProductOfferingPrice
      parameters:
      - description: Identifier of the ProductOfferingPrice
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated properties to provide in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              examples:
                block-256-offer-price:
                  value:
                    id: block-256-offer-price
                    href: /platform/productCatalogManagement/v4/productOfferingPrice/block-256-offer-price
                    description: One time change for a 256kWh block of usage
                    lifecycleStatus: string
                    name: Prepaid 256kWh block
                    priceType: otc
                    version: "1"
                    price:
                      unit: NZD
                      value: 85.43
                    unitOfMeasure:
                      amount: 256
                      units: kWh
                    validFor:
                      endDateTime: null
                      startDateTime: 2019-08-24T14:15:22Z
              schema:
                $ref: '#/components/schemas/ProductOfferingPrice'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieves a ProductOfferingPrice by ID
      tags:
      - productOfferingPrice
      x-accepts: application/json;charset=utf-8
  /productSpecification:
    get:
      description: This operation list or find ProductSpecification entities
      operationId: listProductSpecification
      parameters:
      - description: Comma-separated properties to be provided in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Requested index for start of resources to be provided in response
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: Requested number of resources to be provided in response
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ProductSpecification'
                type: array
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: Actual number of items returned in the response body
              explode: false
              schema:
                type: integer
              style: simple
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: List or find ProductSpecification objects
      tags:
      - productSpecification
      x-accepts: application/json;charset=utf-8
  /productSpecification/{id}:
    get:
      description: This operation retrieves a ProductSpecification entity. Attribute
        selection is enabled for all first level attributes.
      operationId: retrieveProductSpecification
      parameters:
      - description: Identifier of the ProductSpecification
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated properties to provide in response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProductSpecification'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        "405":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Method Not allowed
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      summary: Retrieves a ProductSpecification by ID
      tags:
      - productSpecification
      x-accepts: application/json;charset=utf-8
components:
  schemas:
    AgreementRef:
      description: Agreement reference. An agreement represents a contract or arrangement,
        either written or verbal and sometimes enforceable by law, such as a service
        level agreement or a customer price agreement. An agreement involves a number
        of other business entities, such as products, services, and resources and/or
        their specifications.
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the agreement
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    Any:
      type: object
    Attachment:
      description: Complements the description of an element (for instance a product)
        through video, pictures...
      properties:
        id:
          description: Unique identifier for this particular attachment
          type: string
        href:
          description: URI for this Attachment
          type: string
        attachmentType:
          description: Attachment type such as video, picture
          type: string
        content:
          description: The actual contents of the attachment object, if embedded,
            encoded as base64
          type: string
        description:
          description: A narrative text describing the content of the attachment
          type: string
        mimeType:
          description: Attachment mime type such as extension file for video, picture
            and document
          type: string
        name:
          description: The name of the attachment
          type: string
        url:
          description: Uniform Resource Locator, is a web page address (a subset of
            URI)
          type: string
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    AttachmentRef:
      description: Attachment reference. An attachment complements the description
        of an element (for instance a product) through video, pictures
      properties:
        id:
          description: Unique-Identifier for this attachment
          type: string
        href:
          description: URL serving as reference for the attachment resource
          type: string
        description:
          description: A narrative text describing the content of the attachment
          type: string
        name:
          description: Name of the related entity.
          type: string
        url:
          description: Link to the attachment media/content
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    AttachmentRefOrValue:
      description: An attachment by value or by reference. For AttachmentRefOrValue,
        the attribute type,schemaLocation and referredType are related to the contained
        entity and not to AttchmentRefOrValue itself
      example:
        '@referredType': '@referredType'
        attachmentType: attachmentType
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        description: description
        mimeType: mimeType
        content: content
        url: url
        size:
          amount: 0.8008282
          units: units
        '@baseType': '@baseType'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier for this particular attachment
          type: string
        href:
          description: URI for this Attachment
          type: string
        attachmentType:
          description: Attachment type such as video, picture
          type: string
        content:
          description: The actual contents of the attachment object, if embedded,
            encoded as base64
          type: string
        description:
          description: A narrative text describing the content of the attachment
          type: string
        mimeType:
          description: Attachment mime type such as extension file for video, picture
            and document
          type: string
        name:
          description: The name of the attachment
          type: string
        url:
          description: Uniform Resource Locator, is a web page address (a subset of
            URI)
          type: string
        size:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      type: object
    BundledProductOffering:
      description: A type of ProductOffering that belongs to a grouping of ProductOfferings
        made available to the market. It inherits of all attributes of ProductOffering.
      example:
        bundledProductOfferingOption:
          '@baseType': '@baseType'
          numberRelOfferDefault: 6
          numberRelOfferLowerLimit: 1
          '@type': '@type'
          numberRelOfferUpperLimit: 5
          '@schemaLocation': https://openapi-generator.tech
        lifecycleStatus: lifecycleStatus
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of the BundledProductOffering
          type: string
        href:
          description: Unique reference of the BundledProductOffering
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the BundledProductOffering
          type: string
        bundledProductOfferingOption:
          $ref: '#/components/schemas/BundledProductOfferingOption'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    BundledProductOfferingOption:
      description: A set of numbers that specifies the lower and upper limits for
        a ProductOffering that can be procured as part of the related BundledProductOffering.
        Values can range from 0 to unbounded
      example:
        '@baseType': '@baseType'
        numberRelOfferDefault: 6
        numberRelOfferLowerLimit: 1
        '@type': '@type'
        numberRelOfferUpperLimit: 5
        '@schemaLocation': https://openapi-generator.tech
      properties:
        numberRelOfferDefault:
          description: Default number of produc offereings that should be procured
            as part of the related BundledProductOffering
          type: integer
        numberRelOfferLowerLimit:
          description: lower limit for a product offering that can be procured as
            part of the related BundledProductOffering
          type: integer
        numberRelOfferUpperLimit:
          description: upper limit for a product offering that can be procured as
            part of the related BundledProductOffering
          type: integer
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    BundledProductOfferingPriceRelationship:
      description: This represents a bundling pricing relationship, allowing a price
        to be composed of multiple other prices (e.g. a recurring charge and a onetime
        charge).
      example:
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of the bundled product offering price
          type: string
        href:
          description: hyperlink reference of the bundled product offering price
          type: string
        name:
          description: Name of the bundled product offering price
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    BundledProductSpecification:
      description: A type of ProductSpecification that belongs to a grouping of ProductSpecifications
        made available to the market. It inherits of all attributes of ProductSpecification.
      example:
        lifecycleStatus: lifecycleStatus
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of the product specification
          type: string
        href:
          description: Reference of the product specification
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the product specification
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    Catalog:
      description: A collection of Product Offerings, intended for a specific DistributionChannel,
        enhanced with additional information such as SLA parameters, invoicing and
        shipping details
      example:
        catalogType: catalogType
        lifecycleStatus: lifecycleStatus
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        description: description
        relatedParty:
        - '@referredType': '@referredType'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        version: version
        '@baseType': '@baseType'
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        href: href
        category:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of the Catalog
          type: string
        href:
          description: Unique reference of the catalog
          type: string
        catalogType:
          description: Indicates if the catalog is a product, service or resource
            catalog
          type: string
        description:
          description: Description of this catalog
          type: string
        lastUpdate:
          description: Date and time of the last update
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the catalog
          type: string
        version:
          description: Catalog version
          type: string
        category:
          description: List of root categories contained in this catalog
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        relatedParty:
          description: List of parties involved in this catalog
          items:
            $ref: '#/components/schemas/RelatedParty'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    Catalog_Create:
      description: |-
        A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details
        Skipped properties: id,href
      properties:
        catalogType:
          description: Indicates if the catalog is a product, service or resource
            catalog
          type: string
        description:
          description: Description of this catalog
          type: string
        lastUpdate:
          description: Date and time of the last update
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the catalog
          type: string
        version:
          description: Catalog version
          type: string
        category:
          description: List of root categories contained in this catalog
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        relatedParty:
          description: List of parties involved in this catalog
          items:
            $ref: '#/components/schemas/RelatedParty'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      required:
      - name
      type: object
    Catalog_Update:
      description: |-
        A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details
        Skipped properties: id,href,lastUpdate
      properties:
        catalogType:
          description: Indicates if the catalog is a product, service or resource
            catalog
          type: string
        description:
          description: Description of this catalog
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the catalog
          type: string
        version:
          description: Catalog version
          type: string
        category:
          description: List of root categories contained in this catalog
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        relatedParty:
          description: List of parties involved in this catalog
          items:
            $ref: '#/components/schemas/RelatedParty'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    Category:
      description: The category resource is used to group product offerings, service
        and resource candidates in logical containers. Categories can contain other
        categories and/or product offerings, resource or service candidates.
      example:
        subCategory:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        isRoot: true
        lifecycleStatus: lifecycleStatus
        productOffering:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        description: description
        version: version
        parentId: parentId
        '@baseType': '@baseType'
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of the category
          type: string
        href:
          description: Reference of the category
          type: string
        description:
          description: Description of the category
          type: string
        isRoot:
          description: If true, this Boolean indicates that the category is a root
            of categories
          type: boolean
        lastUpdate:
          description: Date and time of the last update
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the category
          type: string
        parentId:
          description: Unique identifier of the parent category
          type: string
        version:
          description: Category version
          type: string
        productOffering:
          description: A product offering represents entities that are orderable from
            the provider of the catalog, this resource includes pricing information.
          items:
            $ref: '#/components/schemas/ProductOfferingRef'
          type: array
        subCategory:
          description: The category resource is used to group product offerings, service
            and resource candidates in logical containers. Categories can contain
            other (sub-)categories and/or product offerings.
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    Category_Create:
      description: |-
        The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.
        Skipped properties: id,href
      properties:
        description:
          description: Description of the category
          type: string
        isRoot:
          description: If true, this Boolean indicates that the category is a root
            of categories
          type: boolean
        lastUpdate:
          description: Date and time of the last update
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the category
          type: string
        parentId:
          description: Unique identifier of the parent category
          type: string
        version:
          description: Category version
          type: string
        productOffering:
          description: A product offering represents entities that are orderable from
            the provider of the catalog, this resource includes pricing information.
          items:
            $ref: '#/components/schemas/ProductOfferingRef'
          type: array
        subCategory:
          description: The category resource is used to group product offerings, service
            and resource candidates in logical containers. Categories can contain
            other (sub-)categories and/or product offerings.
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      required:
      - name
      type: object
    Category_Update:
      description: |-
        The category resource is used to group product offerings, service and resource candidates in logical containers. Categories can contain other categories and/or product offerings, resource or service candidates.
        Skipped properties: id,href,lastUpdate
      properties:
        description:
          description: Description of the category
          type: string
        isRoot:
          description: If true, this Boolean indicates that the category is a root
            of categories
          type: boolean
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the category
          type: string
        parentId:
          description: Unique identifier of the parent category
          type: string
        version:
          description: Category version
          type: string
        productOffering:
          description: A product offering represents entities that are orderable from
            the provider of the catalog, this resource includes pricing information.
          items:
            $ref: '#/components/schemas/ProductOfferingRef'
          type: array
        subCategory:
          description: The category resource is used to group product offerings, service
            and resource candidates in logical containers. Categories can contain
            other (sub-)categories and/or product offerings.
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    CategoryRef:
      description: The category for grouping recommendations
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
        version: version
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the related entity.
          type: string
        version:
          description: Category version
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ChannelRef:
      description: The channel to which the resource reference to. e.g. channel for
        selling product offerings, channel for opening a trouble ticket etc..
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the related entity.
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ConstraintRef:
      description: Constraint reference. The Constraint resource represents a policy/rule
        applied to an entity or entity spec.
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
        version: version
      properties:
        id:
          description: reference id to the target constraint
          type: string
        href:
          description: Hyperlink reference to the target constraint
          type: string
        name:
          description: Name given to the constraint
          type: string
        version:
          description: constraint version
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The (class) type of the referred constraint
          type: string
      required:
      - id
      type: object
    EntityRef:
      description: Entity reference schema to be use for all entityRef class.
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the related entity.
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ExportJob:
      description: Represents a task used to export resources to a file
      properties:
        id:
          description: Identifier of the export job
          type: string
        href:
          description: Reference of the export job
          type: string
        completionDate:
          description: Data at which the job was completed
          format: date-time
          type: string
        contentType:
          description: The format of the exported data
          type: string
        creationDate:
          description: Date at which the job was created
          format: date-time
          type: string
        errorLog:
          description: Reason for failure
          type: string
        path:
          description: URL of the root resource acting as the source for streaming
            content to the file specified by the export job
          type: string
        query:
          description: Used to scope the exported data
          type: string
        url:
          description: URL of the file containing the data to be exported
          type: string
        status:
          $ref: '#/components/schemas/JobStateType'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ExportJob_Create:
      description: |-
        Represents a task used to export resources to a file
        Skipped properties: id,href
      properties:
        completionDate:
          description: Data at which the job was completed
          format: date-time
          type: string
        contentType:
          description: The format of the exported data
          type: string
        creationDate:
          description: Date at which the job was created
          format: date-time
          type: string
        errorLog:
          description: Reason for failure
          type: string
        path:
          description: URL of the root resource acting as the source for streaming
            content to the file specified by the export job
          type: string
        query:
          description: Used to scope the exported data
          type: string
        url:
          description: URL of the file containing the data to be exported
          type: string
        status:
          $ref: '#/components/schemas/JobStateType'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      required:
      - url
      type: object
    ImportJob:
      description: Represents a task used to import resources from a file
      properties:
        id:
          description: Identifier of the import job
          type: string
        href:
          description: Reference of the import job
          type: string
        completionDate:
          description: Date at which the job was completed
          format: date-time
          type: string
        contentType:
          description: Indicates the format of the imported data
          type: string
        creationDate:
          description: Date at which the job was created
          format: date-time
          type: string
        errorLog:
          description: Reason for failure if status is failed
          type: string
        path:
          description: URL of the root resource where the content of the file specified
            by the import job must be applied
          type: string
        url:
          description: URL of the file containing the data to be imported
          type: string
        status:
          $ref: '#/components/schemas/JobStateType'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ImportJob_Create:
      description: |-
        Represents a task used to import resources from a file
        Skipped properties: id,href
      properties:
        completionDate:
          description: Date at which the job was completed
          format: date-time
          type: string
        contentType:
          description: Indicates the format of the imported data
          type: string
        creationDate:
          description: Date at which the job was created
          format: date-time
          type: string
        errorLog:
          description: Reason for failure if status is failed
          type: string
        path:
          description: URL of the root resource where the content of the file specified
            by the import job must be applied
          type: string
        url:
          description: URL of the file containing the data to be imported
          type: string
        status:
          $ref: '#/components/schemas/JobStateType'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      required:
      - url
      type: object
    JobStateType:
      description: Valid values for the state of a batch job (e.g. catalog import)
      enum:
      - Not Started
      - Running
      - Succeeded
      - Failed
      type: string
    MarketSegmentRef:
      description: provides references to the corresponding market segment as target
        of product offerings. A market segment is grouping of Parties, GeographicAreas,
        SalesChannels, and so forth.
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of the market segment
          type: string
        href:
          description: Reference of the market segment
          type: string
        name:
          description: Name of the market segment
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: (Class) type of the referred market segment
          type: string
      required:
      - id
      type: object
    Money:
      description: A base / value business entity used to represent money
      example:
        unit: unit
        value: 1.4658129
      properties:
        unit:
          description: Currency (ISO4217 norm uses 3 letters to define the currency)
          type: string
        value:
          description: A positive floating point number
          format: float
          type: number
      type: object
    PlaceRef:
      description: Place reference. PlaceRef defines the placeRefs where the products
        are sold or delivered.
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the related entity.
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    PricingLogicAlgorithm:
      description: The PricingLogicAlgorithm entity represents an instantiation of
        an interface specification to external rating function (without a modeled
        bahavior in SID). Some of the parameters of the interface definiition may
        be already set (such as price per unit) and some may be gathered during the
        rating process from the event (such as call duration) or from ProductCharacteristicValues
        (such as assigned bandwidth)
      example:
        '@baseType': '@baseType'
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        name: name
        description: description
        id: id
        href: href
        plaSpecId: plaSpecId
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: unique id of the PricingLogicAlgorithm
          type: string
        href:
          description: hyperlink reference of this PricingLogicAlgorithm
          type: string
        description:
          description: Description of the PricingLogicAlgorithm
          type: string
        name:
          description: Name given to the PricingLogicAlgorithm
          type: string
        plaSpecId:
          description: id of corresponding PricingLogicAlgorithm specification
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductOffering:
      description: Represents entities that are orderable from the provider of the
        catalog, this resource includes pricing information.
      example:
        isBundle: true
        productSpecification:
          '@referredType': '@referredType'
          targetProductSchema:
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        lifecycleStatus: lifecycleStatus
        serviceCandidate:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        '@type': '@type'
        channel:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        description: description
        productOfferingPrice:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        resourceCandidate:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        statusReason: statusReason
        bundledProductOffering:
        - bundledProductOfferingOption:
            '@baseType': '@baseType'
            numberRelOfferDefault: 6
            numberRelOfferLowerLimit: 1
            '@type': '@type'
            numberRelOfferUpperLimit: 5
            '@schemaLocation': https://openapi-generator.tech
          lifecycleStatus: lifecycleStatus
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - bundledProductOfferingOption:
            '@baseType': '@baseType'
            numberRelOfferDefault: 6
            numberRelOfferLowerLimit: 1
            '@type': '@type'
            numberRelOfferUpperLimit: 5
            '@schemaLocation': https://openapi-generator.tech
          lifecycleStatus: lifecycleStatus
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        attachment:
        - '@referredType': '@referredType'
          attachmentType: attachmentType
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          description: description
          mimeType: mimeType
          content: content
          url: url
          size:
            amount: 0.8008282
            units: units
          '@baseType': '@baseType'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          attachmentType: attachmentType
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          description: description
          mimeType: mimeType
          content: content
          url: url
          size:
            amount: 0.8008282
            units: units
          '@baseType': '@baseType'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        '@baseType': '@baseType'
        id: id
        href: href
        place:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        '@schemaLocation': https://openapi-generator.tech
        productOfferingTerm:
        - duration:
            amount: 0.8008282
            units: units
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          name: name
          description: description
          '@schemaLocation': https://openapi-generator.tech
        - duration:
            amount: 0.8008282
            units: units
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          name: name
          description: description
          '@schemaLocation': https://openapi-generator.tech
        marketSegment:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        prodSpecCharValueUse:
        - minCardinality: 2
          productSpecification:
            '@referredType': '@referredType'
            targetProductSchema:
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            id: id
            href: href
            '@schemaLocation': https://openapi-generator.tech
            version: version
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          valueType: valueType
          name: name
          description: description
          productSpecCharacteristicValue:
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          '@schemaLocation': https://openapi-generator.tech
          maxCardinality: 5
        - minCardinality: 2
          productSpecification:
            '@referredType': '@referredType'
            targetProductSchema:
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            id: id
            href: href
            '@schemaLocation': https://openapi-generator.tech
            version: version
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          valueType: valueType
          name: name
          description: description
          productSpecCharacteristicValue:
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          '@schemaLocation': https://openapi-generator.tech
          maxCardinality: 5
        agreement:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        isSellable: true
        serviceLevelAgreement:
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        version: version
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        name: name
        category:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
      properties:
        id:
          description: Unique identifier of the productOffering
          type: string
        href:
          description: Reference of the ProductOffering
          type: string
        description:
          description: Description of the productOffering
          type: string
        isBundle:
          description: isBundle determines whether a productOffering represents a
            single productOffering (false), or a bundle of productOfferings (true).
          type: boolean
        isSellable:
          description: A flag indicating if this product offer can be sold stand-alone
            for sale or not. If this flag is false it indicates that the offer can
            only be sold within a bundle.
          type: boolean
        lastUpdate:
          description: Date and time of the last update
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the productOffering
          type: string
        statusReason:
          description: A string providing a complementary information on the value
            of the lifecycle status attribute.
          type: string
        version:
          description: ProductOffering version
          type: string
        agreement:
          description: An agreement represents a contract or arrangement, either written
            or verbal and sometimes enforceable by law, such as a service level agreement
            or a customer price agreement. An agreement involves a number of other
            business entities, such as products, services, and resources and/or their
            specifications.
          items:
            $ref: '#/components/schemas/AgreementRef'
          type: array
        attachment:
          description: Complements the description of an element (for instance a product)
            through video, pictures...
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          type: array
        bundledProductOffering:
          description: A type of ProductOffering that belongs to a grouping of ProductOfferings
            made available to the market. It inherits of all attributes of ProductOffering.
          items:
            $ref: '#/components/schemas/BundledProductOffering'
          type: array
        category:
          description: The category resource is used to group product offerings, service
            and resource candidates in logical containers. Categories can contain
            other categories and/or product offerings, resource or service candidates.
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        channel:
          description: The channel defines the channel for selling product offerings.
          items:
            $ref: '#/components/schemas/ChannelRef'
          type: array
        marketSegment:
          description: provides references to the corresponding market segment as
            target of product offerings. A market segment is grouping of Parties,
            GeographicAreas, SalesChannels, and so forth.
          items:
            $ref: '#/components/schemas/MarketSegmentRef'
          type: array
        place:
          description: Place defines the places where the products are sold or delivered.
          items:
            $ref: '#/components/schemas/PlaceRef'
          type: array
        prodSpecCharValueUse:
          description: A use of the ProductSpecificationCharacteristicValue by a ProductOffering
            to which additional properties (attributes) apply or override the properties
            of similar properties contained in ProductSpecificationCharacteristicValue.
            It should be noted that characteristics which their value(s) addressed
            by this object must exist in corresponding product specification. The
            available characteristic values for a ProductSpecificationCharacteristic
            in a Product specification can be modified at the ProductOffering level.
            For example, a characteristic 'Color' might have values White, Blue, Green,
            and Red. But, the list of values can be restricted to e.g. White and Blue
            in an associated product offering. It should be noted that the list of
            values in 'ProductSpecificationCharacteristicValueUse' is a strict subset
            of the list of values as defined in the corresponding product specification
            characteristics.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicValueUse'
          type: array
        productOfferingPrice:
          description: An amount, usually of money, that is asked for or allowed when
            a ProductOffering is bought, rented, or leased. The price is valid for
            a defined period of time and may not represent the actual price paid by
            a customer.
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRef'
          type: array
        productOfferingTerm:
          description: A condition under which a ProductOffering is made available
            to Customers. For instance, a productOffering can be offered with multiple
            commitment periods.
          items:
            $ref: '#/components/schemas/ProductOfferingTerm'
          type: array
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        resourceCandidate:
          $ref: '#/components/schemas/ResourceCandidateRef'
        serviceCandidate:
          $ref: '#/components/schemas/ServiceCandidateRef'
        serviceLevelAgreement:
          $ref: '#/components/schemas/SLARef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductOffering_Create:
      description: |-
        Represents entities that are orderable from the provider of the catalog, this resource includes pricing information.
        Skipped properties: id,href
      properties:
        description:
          description: Description of the productOffering
          type: string
        isBundle:
          description: isBundle determines whether a productOffering represents a
            single productOffering (false), or a bundle of productOfferings (true).
          type: boolean
        isSellable:
          description: A flag indicating if this product offer can be sold stand-alone
            for sale or not. If this flag is false it indicates that the offer can
            only be sold within a bundle.
          type: boolean
        lastUpdate:
          description: Date and time of the last update
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the productOffering
          type: string
        statusReason:
          description: A string providing a complementary information on the value
            of the lifecycle status attribute.
          type: string
        version:
          description: ProductOffering version
          type: string
        agreement:
          description: An agreement represents a contract or arrangement, either written
            or verbal and sometimes enforceable by law, such as a service level agreement
            or a customer price agreement. An agreement involves a number of other
            business entities, such as products, services, and resources and/or their
            specifications.
          items:
            $ref: '#/components/schemas/AgreementRef'
          type: array
        attachment:
          description: Complements the description of an element (for instance a product)
            through video, pictures...
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          type: array
        bundledProductOffering:
          description: A type of ProductOffering that belongs to a grouping of ProductOfferings
            made available to the market. It inherits of all attributes of ProductOffering.
          items:
            $ref: '#/components/schemas/BundledProductOffering'
          type: array
        category:
          description: The category resource is used to group product offerings, service
            and resource candidates in logical containers. Categories can contain
            other categories and/or product offerings, resource or service candidates.
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        channel:
          description: The channel defines the channel for selling product offerings.
          items:
            $ref: '#/components/schemas/ChannelRef'
          type: array
        marketSegment:
          description: provides references to the corresponding market segment as
            target of product offerings. A market segment is grouping of Parties,
            GeographicAreas, SalesChannels, and so forth.
          items:
            $ref: '#/components/schemas/MarketSegmentRef'
          type: array
        place:
          description: Place defines the places where the products are sold or delivered.
          items:
            $ref: '#/components/schemas/PlaceRef'
          type: array
        prodSpecCharValueUse:
          description: A use of the ProductSpecificationCharacteristicValue by a ProductOffering
            to which additional properties (attributes) apply or override the properties
            of similar properties contained in ProductSpecificationCharacteristicValue.
            It should be noted that characteristics which their value(s) addressed
            by this object must exist in corresponding product specification. The
            available characteristic values for a ProductSpecificationCharacteristic
            in a Product specification can be modified at the ProductOffering level.
            For example, a characteristic 'Color' might have values White, Blue, Green,
            and Red. But, the list of values can be restricted to e.g. White and Blue
            in an associated product offering. It should be noted that the list of
            values in 'ProductSpecificationCharacteristicValueUse' is a strict subset
            of the list of values as defined in the corresponding product specification
            characteristics.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicValueUse'
          type: array
        productOfferingPrice:
          description: An amount, usually of money, that is asked for or allowed when
            a ProductOffering is bought, rented, or leased. The price is valid for
            a defined period of time and may not represent the actual price paid by
            a customer.
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRef'
          type: array
        productOfferingTerm:
          description: A condition under which a ProductOffering is made available
            to Customers. For instance, a productOffering can be offered with multiple
            commitment periods.
          items:
            $ref: '#/components/schemas/ProductOfferingTerm'
          type: array
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        resourceCandidate:
          $ref: '#/components/schemas/ResourceCandidateRef'
        serviceCandidate:
          $ref: '#/components/schemas/ServiceCandidateRef'
        serviceLevelAgreement:
          $ref: '#/components/schemas/SLARef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      required:
      - name
      type: object
    ProductOffering_Update:
      description: |-
        Represents entities that are orderable from the provider of the catalog, this resource includes pricing information.
        Skipped properties: id,href,lastUpdate
      properties:
        description:
          description: Description of the productOffering
          type: string
        isBundle:
          description: isBundle determines whether a productOffering represents a
            single productOffering (false), or a bundle of productOfferings (true).
          type: boolean
        isSellable:
          description: A flag indicating if this product offer can be sold stand-alone
            for sale or not. If this flag is false it indicates that the offer can
            only be sold within a bundle.
          type: boolean
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the productOffering
          type: string
        statusReason:
          description: A string providing a complementary information on the value
            of the lifecycle status attribute.
          type: string
        version:
          description: ProductOffering version
          type: string
        agreement:
          description: An agreement represents a contract or arrangement, either written
            or verbal and sometimes enforceable by law, such as a service level agreement
            or a customer price agreement. An agreement involves a number of other
            business entities, such as products, services, and resources and/or their
            specifications.
          items:
            $ref: '#/components/schemas/AgreementRef'
          type: array
        attachment:
          description: Complements the description of an element (for instance a product)
            through video, pictures...
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          type: array
        bundledProductOffering:
          description: A type of ProductOffering that belongs to a grouping of ProductOfferings
            made available to the market. It inherits of all attributes of ProductOffering.
          items:
            $ref: '#/components/schemas/BundledProductOffering'
          type: array
        category:
          description: The category resource is used to group product offerings, service
            and resource candidates in logical containers. Categories can contain
            other categories and/or product offerings, resource or service candidates.
          items:
            $ref: '#/components/schemas/CategoryRef'
          type: array
        channel:
          description: The channel defines the channel for selling product offerings.
          items:
            $ref: '#/components/schemas/ChannelRef'
          type: array
        marketSegment:
          description: provides references to the corresponding market segment as
            target of product offerings. A market segment is grouping of Parties,
            GeographicAreas, SalesChannels, and so forth.
          items:
            $ref: '#/components/schemas/MarketSegmentRef'
          type: array
        place:
          description: Place defines the places where the products are sold or delivered.
          items:
            $ref: '#/components/schemas/PlaceRef'
          type: array
        prodSpecCharValueUse:
          description: A use of the ProductSpecificationCharacteristicValue by a ProductOffering
            to which additional properties (attributes) apply or override the properties
            of similar properties contained in ProductSpecificationCharacteristicValue.
            It should be noted that characteristics which their value(s) addressed
            by this object must exist in corresponding product specification. The
            available characteristic values for a ProductSpecificationCharacteristic
            in a Product specification can be modified at the ProductOffering level.
            For example, a characteristic 'Color' might have values White, Blue, Green,
            and Red. But, the list of values can be restricted to e.g. White and Blue
            in an associated product offering. It should be noted that the list of
            values in 'ProductSpecificationCharacteristicValueUse' is a strict subset
            of the list of values as defined in the corresponding product specification
            characteristics.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicValueUse'
          type: array
        productOfferingPrice:
          description: An amount, usually of money, that is asked for or allowed when
            a ProductOffering is bought, rented, or leased. The price is valid for
            a defined period of time and may not represent the actual price paid by
            a customer.
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRef'
          type: array
        productOfferingTerm:
          description: A condition under which a ProductOffering is made available
            to Customers. For instance, a productOffering can be offered with multiple
            commitment periods.
          items:
            $ref: '#/components/schemas/ProductOfferingTerm'
          type: array
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        resourceCandidate:
          $ref: '#/components/schemas/ResourceCandidateRef'
        serviceCandidate:
          $ref: '#/components/schemas/ServiceCandidateRef'
        serviceLevelAgreement:
          $ref: '#/components/schemas/SLARef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductOfferingPrice:
      description: 'Is based on both the basic cost to develop and produce products
        and the enterprises policy on revenue targets. This price may be further revised
        through discounting (productOfferPriceAlteration). The price, applied for
        a productOffering may also be influenced by the productOfferingTerm, the customer
        selected, eg: a productOffering can be offered with multiple terms, like commitment
        periods for the contract. The price may be influenced by this productOfferingTerm.
        A productOffering may be cheaper with a 24 month commitment than with a 12
        month commitment.'
      example:
        isBundle: true
        popRelationship:
        - relationshipType: relationshipType
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - relationshipType: relationshipType
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        lifecycleStatus: lifecycleStatus
        '@type': '@type'
        description: description
        recurringChargePeriodType: recurringChargePeriodType
        recurringChargePeriodLength: 6
        '@baseType': '@baseType'
        price:
          unit: unit
          value: 1.4658129
        percentage: 0.8008282
        id: id
        href: href
        place:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        '@schemaLocation': '@schemaLocation'
        bundledPopRelationship:
        - '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        productOfferingTerm:
        - duration:
            amount: 0.8008282
            units: units
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          name: name
          description: description
          '@schemaLocation': https://openapi-generator.tech
        - duration:
            amount: 0.8008282
            units: units
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          name: name
          description: description
          '@schemaLocation': https://openapi-generator.tech
        prodSpecCharValueUse:
        - minCardinality: 2
          productSpecification:
            '@referredType': '@referredType'
            targetProductSchema:
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            id: id
            href: href
            '@schemaLocation': https://openapi-generator.tech
            version: version
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          valueType: valueType
          name: name
          description: description
          productSpecCharacteristicValue:
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          '@schemaLocation': https://openapi-generator.tech
          maxCardinality: 5
        - minCardinality: 2
          productSpecification:
            '@referredType': '@referredType'
            targetProductSchema:
              '@baseType': '@baseType'
              '@type': '@type'
              '@schemaLocation': '@schemaLocation'
            '@baseType': '@baseType'
            '@type': '@type'
            name: name
            id: id
            href: href
            '@schemaLocation': https://openapi-generator.tech
            version: version
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          valueType: valueType
          name: name
          description: description
          productSpecCharacteristicValue:
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          '@schemaLocation': https://openapi-generator.tech
          maxCardinality: 5
        unitOfMeasure:
          amount: 0.8008282
          units: units
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        priceType: priceType
        tax:
        - taxRate: 5.962134
          '@baseType': '@baseType'
          '@type': '@type'
          taxAmount:
            unit: unit
            value: 1.4658129
          '@schemaLocation': https://openapi-generator.tech
          taxCategory: taxCategory
        - taxRate: 5.962134
          '@baseType': '@baseType'
          '@type': '@type'
          taxAmount:
            unit: unit
            value: 1.4658129
          '@schemaLocation': https://openapi-generator.tech
          taxCategory: taxCategory
        version: version
        pricingLogicAlgorithm:
        - '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          name: name
          description: description
          id: id
          href: href
          plaSpecId: plaSpecId
          '@schemaLocation': https://openapi-generator.tech
        - '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          name: name
          description: description
          id: id
          href: href
          plaSpecId: plaSpecId
          '@schemaLocation': https://openapi-generator.tech
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        name: name
        constraint:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
      properties:
        id:
          description: unique id of this resource
          type: string
        href:
          description: Reference of the ProductOfferingPrice
          type: string
        description:
          description: Description of the productOfferingPrice
          type: string
        isBundle:
          description: A flag indicating if this ProductOfferingPrice is composite
            (bundle) or not
          type: boolean
        lastUpdate:
          description: the last update time of this ProductOfferingPrice
          format: date-time
          type: string
        lifecycleStatus:
          description: the lifecycle status of this ProductOfferingPrice
          type: string
        name:
          description: Name of the productOfferingPrice
          type: string
        percentage:
          description: Percentage to apply for ProductOfferPriceAlteration (Discount)
          format: float
          type: number
        priceType:
          description: A category that describes the price, such as recurring, discount,
            allowance, penalty, and so forth.
          type: string
        recurringChargePeriodLength:
          description: 'the period of the recurring charge:  1, 2, ... .It sets to
            zero if it is not applicable'
          type: integer
        recurringChargePeriodType:
          description: |-
            The period to repeat the application of the price
            Could be month, week...
          type: string
        version:
          description: ProductOffering version
          type: string
        bundledPopRelationship:
          description: this object represents a bundle relationship from a bundle
            product offering price (parent) to a simple product offering price (child).
            A simple product offering price may participate in more than one bundle
            relationship.
          items:
            $ref: '#/components/schemas/BundledProductOfferingPriceRelationship'
          type: array
        constraint:
          description: The Constraint resource represents a policy/rule applied to
            ProductOfferingPrice.
          items:
            $ref: '#/components/schemas/ConstraintRef'
          type: array
        place:
          description: Place defines the places where the products are sold or delivered.
          items:
            $ref: '#/components/schemas/PlaceRef'
          type: array
        popRelationship:
          description: Product Offering Prices related to this Product Offering Price,
            for example a price alteration such as allowance or discount
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRelationship'
          type: array
        price:
          $ref: '#/components/schemas/Money'
        pricingLogicAlgorithm:
          description: The PricingLogicAlgorithm entity represents an instantiation
            of an interface specification to external rating function (without a modeled
            behavior in SID). Some of the parameters of the interface definition may
            be already set (such as price per unit) and some may be gathered during
            the rating process from the event (such as call duration) or from ProductCharacteristicValues
            (such as assigned bandwidth).
          items:
            $ref: '#/components/schemas/PricingLogicAlgorithm'
          type: array
        prodSpecCharValueUse:
          description: A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice
            to which additional properties (attributes) apply or override the properties
            of similar properties contained in ProductSpecificationCharacteristicValue.
            It should be noted that characteristics which their value(s) addressed
            by this object must exist in corresponding product specification. The
            available characteristic values for a ProductSpecificationCharacteristic
            in a Product specification can be modified at the ProductOffering and
            ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse
            is a strict subset of the list of values as defined in the corresponding
            product specification characteristics.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicValueUse'
          type: array
        productOfferingTerm:
          description: A list of conditions under which a ProductOfferingPrice is
            made available to Customers. For instance, a Product Offering Price can
            be offered with multiple commitment periods.
          items:
            $ref: '#/components/schemas/ProductOfferingTerm'
          type: array
        tax:
          description: An amount of money levied on the price of a Product by a legislative
            body.
          items:
            $ref: '#/components/schemas/TaxItem'
          type: array
        unitOfMeasure:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: the immediate base class type of this product offering
          type: string
        '@schemaLocation':
          description: hyperlink reference to the schema describing this resource
          type: string
        '@type':
          description: The class type of this Product offering
          type: string
      type: object
    ProductOfferingPrice_Create:
      description: |-
        Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (productOfferPriceAlteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment.
        Skipped properties: id,href
      properties:
        description:
          description: Description of the productOfferingPrice
          type: string
        isBundle:
          description: A flag indicating if this ProductOfferingPrice is composite
            (bundle) or not
          type: boolean
        lastUpdate:
          description: the last update time of this ProductOfferingPrice
          format: date-time
          type: string
        lifecycleStatus:
          description: the lifecycle status of this ProductOfferingPrice
          type: string
        name:
          description: Name of the productOfferingPrice
          type: string
        percentage:
          description: Percentage to apply for ProductOfferPriceAlteration (Discount)
          format: float
          type: number
        priceType:
          description: A category that describes the price, such as recurring, discount,
            allowance, penalty, and so forth.
          type: string
        recurringChargePeriodLength:
          description: 'the period of the recurring charge:  1, 2, ... .It sets to
            zero if it is not applicable'
          type: integer
        recurringChargePeriodType:
          description: |-
            The period to repeat the application of the price
            Could be month, week...
          type: string
        version:
          description: ProductOffering version
          type: string
        bundledPopRelationship:
          description: this object represents a bundle relationship from a bundle
            product offering price (parent) to a simple product offering price (child).
            A simple product offering price may participate in more than one bundle
            relationship.
          items:
            $ref: '#/components/schemas/BundledProductOfferingPriceRelationship'
          type: array
        constraint:
          description: The Constraint resource represents a policy/rule applied to
            ProductOfferingPrice.
          items:
            $ref: '#/components/schemas/ConstraintRef'
          type: array
        place:
          description: Place defines the places where the products are sold or delivered.
          items:
            $ref: '#/components/schemas/PlaceRef'
          type: array
        popRelationship:
          description: Product Offering Prices related to this Product Offering Price,
            for example a price alteration such as allowance or discount
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRelationship'
          type: array
        price:
          $ref: '#/components/schemas/Money'
        pricingLogicAlgorithm:
          description: The PricingLogicAlgorithm entity represents an instantiation
            of an interface specification to external rating function (without a modeled
            behavior in SID). Some of the parameters of the interface definition may
            be already set (such as price per unit) and some may be gathered during
            the rating process from the event (such as call duration) or from ProductCharacteristicValues
            (such as assigned bandwidth).
          items:
            $ref: '#/components/schemas/PricingLogicAlgorithm'
          type: array
        prodSpecCharValueUse:
          description: A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice
            to which additional properties (attributes) apply or override the properties
            of similar properties contained in ProductSpecificationCharacteristicValue.
            It should be noted that characteristics which their value(s) addressed
            by this object must exist in corresponding product specification. The
            available characteristic values for a ProductSpecificationCharacteristic
            in a Product specification can be modified at the ProductOffering and
            ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse
            is a strict subset of the list of values as defined in the corresponding
            product specification characteristics.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicValueUse'
          type: array
        productOfferingTerm:
          description: A list of conditions under which a ProductOfferingPrice is
            made available to Customers. For instance, a Product Offering Price can
            be offered with multiple commitment periods.
          items:
            $ref: '#/components/schemas/ProductOfferingTerm'
          type: array
        tax:
          description: An amount of money levied on the price of a Product by a legislative
            body.
          items:
            $ref: '#/components/schemas/TaxItem'
          type: array
        unitOfMeasure:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: the immediate base class type of this product offering
          type: string
        '@schemaLocation':
          description: hyperlink reference to the schema describing this resource
          type: string
        '@type':
          description: The class type of this Product offering
          type: string
      required:
      - name
      type: object
    ProductOfferingPrice_Update:
      description: |-
        Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (productOfferPriceAlteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment.
        Skipped properties: id,href,lastUpdate
      properties:
        description:
          description: Description of the productOfferingPrice
          type: string
        isBundle:
          description: A flag indicating if this ProductOfferingPrice is composite
            (bundle) or not
          type: boolean
        lifecycleStatus:
          description: the lifecycle status of this ProductOfferingPrice
          type: string
        name:
          description: Name of the productOfferingPrice
          type: string
        percentage:
          description: Percentage to apply for ProductOfferPriceAlteration (Discount)
          format: float
          type: number
        priceType:
          description: A category that describes the price, such as recurring, discount,
            allowance, penalty, and so forth.
          type: string
        recurringChargePeriodLength:
          description: 'the period of the recurring charge:  1, 2, ... .It sets to
            zero if it is not applicable'
          type: integer
        recurringChargePeriodType:
          description: |-
            The period to repeat the application of the price
            Could be month, week...
          type: string
        version:
          description: ProductOffering version
          type: string
        bundledPopRelationship:
          description: this object represents a bundle relationship from a bundle
            product offering price (parent) to a simple product offering price (child).
            A simple product offering price may participate in more than one bundle
            relationship.
          items:
            $ref: '#/components/schemas/BundledProductOfferingPriceRelationship'
          type: array
        constraint:
          description: The Constraint resource represents a policy/rule applied to
            ProductOfferingPrice.
          items:
            $ref: '#/components/schemas/ConstraintRef'
          type: array
        place:
          description: Place defines the places where the products are sold or delivered.
          items:
            $ref: '#/components/schemas/PlaceRef'
          type: array
        popRelationship:
          description: Product Offering Prices related to this Product Offering Price,
            for example a price alteration such as allowance or discount
          items:
            $ref: '#/components/schemas/ProductOfferingPriceRelationship'
          type: array
        price:
          $ref: '#/components/schemas/Money'
        pricingLogicAlgorithm:
          description: The PricingLogicAlgorithm entity represents an instantiation
            of an interface specification to external rating function (without a modeled
            behavior in SID). Some of the parameters of the interface definition may
            be already set (such as price per unit) and some may be gathered during
            the rating process from the event (such as call duration) or from ProductCharacteristicValues
            (such as assigned bandwidth).
          items:
            $ref: '#/components/schemas/PricingLogicAlgorithm'
          type: array
        prodSpecCharValueUse:
          description: A use of the ProductSpecificationCharacteristicValue by a ProductOfferingPrice
            to which additional properties (attributes) apply or override the properties
            of similar properties contained in ProductSpecificationCharacteristicValue.
            It should be noted that characteristics which their value(s) addressed
            by this object must exist in corresponding product specification. The
            available characteristic values for a ProductSpecificationCharacteristic
            in a Product specification can be modified at the ProductOffering and
            ProcuctOfferingPrice level. The list of values in ProductSpecificationCharacteristicValueUse
            is a strict subset of the list of values as defined in the corresponding
            product specification characteristics.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicValueUse'
          type: array
        productOfferingTerm:
          description: A list of conditions under which a ProductOfferingPrice is
            made available to Customers. For instance, a Product Offering Price can
            be offered with multiple commitment periods.
          items:
            $ref: '#/components/schemas/ProductOfferingTerm'
          type: array
        tax:
          description: An amount of money levied on the price of a Product by a legislative
            body.
          items:
            $ref: '#/components/schemas/TaxItem'
          type: array
        unitOfMeasure:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: the immediate base class type of this product offering
          type: string
        '@schemaLocation':
          description: hyperlink reference to the schema describing this resource
          type: string
        '@type':
          description: The class type of this Product offering
          type: string
      type: object
    ProductOfferingPriceRef:
      description: ProductPriceOffering reference. An amount, usually of money, that
        is asked for or allowed when a ProductOffering is bought, rented, or leased
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the related entity.
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ProductOfferingPriceRelationship:
      description: Describes a non-composite relationship between product offering
        prices. For example one price might be an discount alteration for another
        price.
      example:
        relationshipType: relationshipType
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of the associated product offering price
          type: string
        href:
          description: hyperlink reference of the associated product offering price
          type: string
        name:
          description: Name of the associated product offering price
          type: string
        relationshipType:
          description: type of the relationship, for example override, discount, etc.
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductOfferingRef:
      description: ProductOffering reference. A product offering represents entities
        that are orderable from the provider of the catalog, this resource includes
        pricing information.
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the related entity.
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ProductOfferingTerm:
      description: A condition under which a ProductOffering is made available to
        Customers. For instance, a productOffering can be offered with multiple commitment
        periods.
      example:
        duration:
          amount: 0.8008282
          units: units
        '@baseType': '@baseType'
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        name: name
        description: description
        '@schemaLocation': https://openapi-generator.tech
      properties:
        description:
          description: Description of the productOfferingTerm
          type: string
        name:
          description: Name of the productOfferingTerm
          type: string
        duration:
          $ref: '#/components/schemas/Quantity'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductSpecification:
      description: Is a detailed description of a tangible or intangible object made
        available externally in the form of a ProductOffering to customers or other
        parties playing a party role.
      example:
        isBundle: true
        productSpecCharacteristic:
        - validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          isUnique: true
          description: description
          maxCardinality: 0
          minCardinality: 6
          regex: regex
          '@baseType': '@baseType'
          valueType: valueType
          name: name
          productSpecCharRelationship:
          - charSpecSeq: 1
            relationshipType: relationshipType
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            name: name
            id: id
            href: href
            '@schemaLocation': https://openapi-generator.tech
          - charSpecSeq: 1
            relationshipType: relationshipType
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            name: name
            id: id
            href: href
            '@schemaLocation': https://openapi-generator.tech
          productSpecCharacteristicValue:
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          '@schemaLocation': https://openapi-generator.tech
          extensible: true
          configurable: true
        - validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          isUnique: true
          description: description
          maxCardinality: 0
          minCardinality: 6
          regex: regex
          '@baseType': '@baseType'
          valueType: valueType
          name: name
          productSpecCharRelationship:
          - charSpecSeq: 1
            relationshipType: relationshipType
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            name: name
            id: id
            href: href
            '@schemaLocation': https://openapi-generator.tech
          - charSpecSeq: 1
            relationshipType: relationshipType
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            name: name
            id: id
            href: href
            '@schemaLocation': https://openapi-generator.tech
          productSpecCharacteristicValue:
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          - rangeInterval: rangeInterval
            isDefault: true
            regex: regex
            valueTo: valueTo
            unitOfMeasure: unitOfMeasure
            '@baseType': '@baseType'
            validFor:
              startDateTime: 2000-01-23T04:56:07.000+00:00
              endDateTime: 2000-01-23T04:56:07.000+00:00
            '@type': '@type'
            valueType: valueType
            '@schemaLocation': https://openapi-generator.tech
            value: '{}'
            valueFrom: valueFrom
          '@schemaLocation': https://openapi-generator.tech
          extensible: true
          configurable: true
        lifecycleStatus: lifecycleStatus
        targetProductSchema:
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        resourceSpecification:
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        - '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        serviceSpecification:
        - targetServiceSchema:
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        - targetServiceSchema:
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          '@referredType': '@referredType'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        description: description
        productNumber: productNumber
        relatedParty:
        - '@referredType': '@referredType'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          role: role
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        version: version
        attachment:
        - '@referredType': '@referredType'
          attachmentType: attachmentType
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          description: description
          mimeType: mimeType
          content: content
          url: url
          size:
            amount: 0.8008282
            units: units
          '@baseType': '@baseType'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - '@referredType': '@referredType'
          attachmentType: attachmentType
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          description: description
          mimeType: mimeType
          content: content
          url: url
          size:
            amount: 0.8008282
            units: units
          '@baseType': '@baseType'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        '@baseType': '@baseType'
        bundledProductSpecification:
        - lifecycleStatus: lifecycleStatus
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - lifecycleStatus: lifecycleStatus
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        name: name
        productSpecificationRelationship:
        - relationshipType: relationshipType
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - relationshipType: relationshipType
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
        brand: brand
      properties:
        id:
          description: Unique identifier of the product specification
          type: string
        href:
          description: Reference of the product specification
          type: string
        brand:
          description: The manufacturer or trademark of the specification
          type: string
        description:
          description: A narrative that explains in detail what the product specification
            is
          type: string
        isBundle:
          description: isBundle determines whether a productSpecification represents
            a single productSpecification (false), or a bundle of productSpecification
            (true).
          type: boolean
        lastUpdate:
          description: Date and time of the last update
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the product specification
          type: string
        productNumber:
          description: An identification number assigned to uniquely identity the
            specification
          type: string
        version:
          description: Product specification version
          type: string
        attachment:
          description: Complements the description of an element (for instance a product)
            through video, pictures...
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          type: array
        bundledProductSpecification:
          description: A type of ProductSpecification that belongs to a grouping of
            ProductSpecifications made available to the market. It inherits of all
            attributes of ProductSpecification.
          items:
            $ref: '#/components/schemas/BundledProductSpecification'
          type: array
        productSpecCharacteristic:
          description: A characteristic quality or distinctive feature of a ProductSpecification.  The
            characteristic can be take on a discrete value, such as color, can take
            on a range of values, (for example, sensitivity of 100-240 mV), or can
            be derived from a formula (for example, usage time (hrs) = 30 - talk time
            *3). Certain characteristics, such as color, may be configured during
            the ordering or some other process.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristic'
          type: array
        productSpecificationRelationship:
          description: A migration, substitution, dependency or exclusivity relationship
            between/among product specifications.
          items:
            $ref: '#/components/schemas/ProductSpecificationRelationship'
          type: array
        relatedParty:
          description: A related party defines party or party role linked to a specific
            entity.
          items:
            $ref: '#/components/schemas/RelatedParty'
          type: array
        resourceSpecification:
          description: The ResourceSpecification is required to realize a ProductSpecification.
          items:
            $ref: '#/components/schemas/ResourceSpecificationRef'
          type: array
        serviceSpecification:
          description: ServiceSpecification(s) required to realize a ProductSpecification.
          items:
            $ref: '#/components/schemas/ServiceSpecificationRef'
          type: array
        targetProductSchema:
          $ref: '#/components/schemas/TargetProductSchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductSpecification_Create:
      description: |-
        Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.
        Skipped properties: id,href
      properties:
        brand:
          description: The manufacturer or trademark of the specification
          type: string
        description:
          description: A narrative that explains in detail what the product specification
            is
          type: string
        isBundle:
          description: isBundle determines whether a productSpecification represents
            a single productSpecification (false), or a bundle of productSpecification
            (true).
          type: boolean
        lastUpdate:
          description: Date and time of the last update
          format: date-time
          type: string
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the product specification
          type: string
        productNumber:
          description: An identification number assigned to uniquely identity the
            specification
          type: string
        version:
          description: Product specification version
          type: string
        attachment:
          description: Complements the description of an element (for instance a product)
            through video, pictures...
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          type: array
        bundledProductSpecification:
          description: A type of ProductSpecification that belongs to a grouping of
            ProductSpecifications made available to the market. It inherits of all
            attributes of ProductSpecification.
          items:
            $ref: '#/components/schemas/BundledProductSpecification'
          type: array
        productSpecCharacteristic:
          description: A characteristic quality or distinctive feature of a ProductSpecification.  The
            characteristic can be take on a discrete value, such as color, can take
            on a range of values, (for example, sensitivity of 100-240 mV), or can
            be derived from a formula (for example, usage time (hrs) = 30 - talk time
            *3). Certain characteristics, such as color, may be configured during
            the ordering or some other process.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristic'
          type: array
        productSpecificationRelationship:
          description: A migration, substitution, dependency or exclusivity relationship
            between/among product specifications.
          items:
            $ref: '#/components/schemas/ProductSpecificationRelationship'
          type: array
        relatedParty:
          description: A related party defines party or party role linked to a specific
            entity.
          items:
            $ref: '#/components/schemas/RelatedParty'
          type: array
        resourceSpecification:
          description: The ResourceSpecification is required to realize a ProductSpecification.
          items:
            $ref: '#/components/schemas/ResourceSpecificationRef'
          type: array
        serviceSpecification:
          description: ServiceSpecification(s) required to realize a ProductSpecification.
          items:
            $ref: '#/components/schemas/ServiceSpecificationRef'
          type: array
        targetProductSchema:
          $ref: '#/components/schemas/TargetProductSchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      required:
      - name
      type: object
    ProductSpecification_Update:
      description: |-
        Is a detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to customers or other parties playing a party role.
        Skipped properties: id,href,lastUpdate
      properties:
        brand:
          description: The manufacturer or trademark of the specification
          type: string
        description:
          description: A narrative that explains in detail what the product specification
            is
          type: string
        isBundle:
          description: isBundle determines whether a productSpecification represents
            a single productSpecification (false), or a bundle of productSpecification
            (true).
          type: boolean
        lifecycleStatus:
          description: Used to indicate the current lifecycle status
          type: string
        name:
          description: Name of the product specification
          type: string
        productNumber:
          description: An identification number assigned to uniquely identity the
            specification
          type: string
        version:
          description: Product specification version
          type: string
        attachment:
          description: Complements the description of an element (for instance a product)
            through video, pictures...
          items:
            $ref: '#/components/schemas/AttachmentRefOrValue'
          type: array
        bundledProductSpecification:
          description: A type of ProductSpecification that belongs to a grouping of
            ProductSpecifications made available to the market. It inherits of all
            attributes of ProductSpecification.
          items:
            $ref: '#/components/schemas/BundledProductSpecification'
          type: array
        productSpecCharacteristic:
          description: A characteristic quality or distinctive feature of a ProductSpecification.  The
            characteristic can be take on a discrete value, such as color, can take
            on a range of values, (for example, sensitivity of 100-240 mV), or can
            be derived from a formula (for example, usage time (hrs) = 30 - talk time
            *3). Certain characteristics, such as color, may be configured during
            the ordering or some other process.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristic'
          type: array
        productSpecificationRelationship:
          description: A migration, substitution, dependency or exclusivity relationship
            between/among product specifications.
          items:
            $ref: '#/components/schemas/ProductSpecificationRelationship'
          type: array
        relatedParty:
          description: A related party defines party or party role linked to a specific
            entity.
          items:
            $ref: '#/components/schemas/RelatedParty'
          type: array
        resourceSpecification:
          description: The ResourceSpecification is required to realize a ProductSpecification.
          items:
            $ref: '#/components/schemas/ResourceSpecificationRef'
          type: array
        serviceSpecification:
          description: ServiceSpecification(s) required to realize a ProductSpecification.
          items:
            $ref: '#/components/schemas/ServiceSpecificationRef'
          type: array
        targetProductSchema:
          $ref: '#/components/schemas/TargetProductSchema'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductSpecificationCharacteristic:
      description: A characteristic quality or distinctive feature of a ProductSpecification.  The
        characteristic can be take on a discrete value, such as color, can take on
        a range of values, (for example, sensitivity of 100-240 mV), or can be derived
        from a formula (for example, usage time (hrs) = 30 - talk time *3). Certain
        characteristics, such as color, may be configured during the ordering or some
        other process.
      example:
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        isUnique: true
        description: description
        maxCardinality: 0
        minCardinality: 6
        regex: regex
        '@baseType': '@baseType'
        valueType: valueType
        name: name
        productSpecCharRelationship:
        - charSpecSeq: 1
          relationshipType: relationshipType
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        - charSpecSeq: 1
          relationshipType: relationshipType
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
        productSpecCharacteristicValue:
        - rangeInterval: rangeInterval
          isDefault: true
          regex: regex
          valueTo: valueTo
          unitOfMeasure: unitOfMeasure
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          valueType: valueType
          '@schemaLocation': https://openapi-generator.tech
          value: '{}'
          valueFrom: valueFrom
        - rangeInterval: rangeInterval
          isDefault: true
          regex: regex
          valueTo: valueTo
          unitOfMeasure: unitOfMeasure
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          valueType: valueType
          '@schemaLocation': https://openapi-generator.tech
          value: '{}'
          valueFrom: valueFrom
        '@schemaLocation': https://openapi-generator.tech
        extensible: true
        configurable: true
      properties:
        configurable:
          description: If true, the Boolean indicates that the ProductSpecificationCharacteristic
            is configurable
          type: boolean
        description:
          description: A narrative that explains in detail what the ProductSpecificationCharacteristic
            is
          type: string
        extensible:
          description: An indicator that specifies that the values for the characteristic
            can be extended by adding new values when instantiating a characteristic
            for a product
          type: boolean
        isUnique:
          description: An indicator that specifies if a value is unique for the specification.
            Possible values are; "unique while value is in effect" and "unique whether
            value is in effect or not"
          type: boolean
        maxCardinality:
          description: The maximum number of instances a CharacteristicValue can take
            on. For example, zero to five phone numbers in a group calling plan, where
            five is the value for the maxCardinality
          type: integer
        minCardinality:
          description: The minimum number of instances a CharacteristicValue can take
            on. For example, zero to five phone numbers in a group calling plan, where
            zero is the value for the minCardinality
          type: integer
        name:
          description: Name of the ProductSpecificationCharacteristic
          type: string
        regex:
          description: A rule or principle represented in regular expression used
            to derive the value of a characteristic value
          type: string
        valueType:
          description: A kind of value that the characteristic can take on, such as
            numeric, text and so forth
          type: string
        productSpecCharRelationship:
          description: An aggregation, migration, substitution, dependency or exclusivity
            relationship between/among Specification Characteristics.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicRelationship'
          type: array
        productSpecCharacteristicValue:
          description: A ProductSpecificationCharacteristicValue object is used to
            define a set of attributes, each of which can be assigned to a corresponding
            set of attributes in a ProductSpecificationCharacteristic object. The
            values of the attributes in the ProductSpecificationCharacteristicValue
            object describe the values of the attributes that a corresponding ProductSpecificationCharacteristic
            object can take on.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicValue'
          type: array
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductSpecificationCharacteristicRelationship:
      description: An aggregation, migration, substitution, dependency or exclusivity
        relationship between/among productSpecificationCharacteristics.
      example:
        charSpecSeq: 1
        relationshipType: relationshipType
        '@baseType': '@baseType'
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: the identifier of the associated product specification
          type: string
        href:
          description: Hyperlink reference to the target product specification
          type: string
        charSpecSeq:
          description: |-
            The order in which a CharacteristicSpecification appears within another CharacteristicSpecification that defines a grouping of CharacteristicSpecifications.

            For example, a grouping may represent the name of an individual. The given name is first, the middle name is second, and the last name is third.
          type: integer
        name:
          description: Name of the target product specification characteristic
          type: string
        relationshipType:
          description: Type of relationship such as aggregation, migration, substitution,
            dependency, exclusivity
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductSpecificationCharacteristicValue:
      description: A ProductSpecificationCharacteristicValue object is used to define
        a set of attributes, each of which can be assigned to a corresponding set
        of attributes in a ProductSpecificationCharacteristic object. The values of
        the attributes in the ProductSpecificationCharacteristicValue object describe
        the values of the attributes that a corresponding ProductSpecificationCharacteristic
        object can take on.
      example:
        rangeInterval: rangeInterval
        isDefault: true
        regex: regex
        valueTo: valueTo
        unitOfMeasure: unitOfMeasure
        '@baseType': '@baseType'
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        valueType: valueType
        '@schemaLocation': https://openapi-generator.tech
        value: '{}'
        valueFrom: valueFrom
      properties:
        isDefault:
          description: Indicates if the value is the default value for a characteristic
          type: boolean
        rangeInterval:
          description: An indicator that specifies the inclusion or exclusion of the
            valueFrom and valueTo attributes. If applicable, possible values are "open",
            "closed", "closedBottom" and "closedTop".
          type: string
        regex:
          description: Regular expression to define constraint on the allowed value
          type: string
        unitOfMeasure:
          description: A length, surface, volume, dry measure, liquid measure, money,
            weight, time, and the like. In general, a determinate quantity or magnitude
            of the kind designated, taken as a standard of comparison for others of
            the same kind, in assigning to them numerical values, as 1 foot, 1 yard,
            1 mile, 1 square foot.
          type: string
        valueFrom:
          description: The low range value that a characteristic can take on
          type: string
        valueTo:
          description: The upper range value that a characteristic can take on
          type: string
        valueType:
          description: A kind of value that the characteristic can take on, such as
            numeric, text, and so forth
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        value:
          type: object
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductSpecificationCharacteristicValueUse:
      description: A use of the ProductSpecificationCharacteristicValue by a ProductOffering
        to which additional properties (attributes) apply or override the properties
        of similar properties contained in ProductSpecificationCharacteristicValue.
        It should be noted that characteristics which their value(s) addressed by
        this object must exist in corresponding product specification. The available
        characteristic values for a ProductSpecificationCharacteristic in a Product
        specification can be modified at the ProductOffering level. For example, a
        characteristic 'Color' might have values White, Blue, Green, and Red. But,
        the list of values can be restricted to e.g. White and Blue in an associated
        product offering. It should be noted that the list of values in 'ProductSpecificationCharacteristicValueUse'
        is a strict subset of the list of values as defined in the corresponding product
        specification characteristics.
      example:
        minCardinality: 2
        productSpecification:
          '@referredType': '@referredType'
          targetProductSchema:
            '@baseType': '@baseType'
            '@type': '@type'
            '@schemaLocation': '@schemaLocation'
          '@baseType': '@baseType'
          '@type': '@type'
          name: name
          id: id
          href: href
          '@schemaLocation': https://openapi-generator.tech
          version: version
        '@baseType': '@baseType'
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        valueType: valueType
        name: name
        description: description
        productSpecCharacteristicValue:
        - rangeInterval: rangeInterval
          isDefault: true
          regex: regex
          valueTo: valueTo
          unitOfMeasure: unitOfMeasure
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          valueType: valueType
          '@schemaLocation': https://openapi-generator.tech
          value: '{}'
          valueFrom: valueFrom
        - rangeInterval: rangeInterval
          isDefault: true
          regex: regex
          valueTo: valueTo
          unitOfMeasure: unitOfMeasure
          '@baseType': '@baseType'
          validFor:
            startDateTime: 2000-01-23T04:56:07.000+00:00
            endDateTime: 2000-01-23T04:56:07.000+00:00
          '@type': '@type'
          valueType: valueType
          '@schemaLocation': https://openapi-generator.tech
          value: '{}'
          valueFrom: valueFrom
        '@schemaLocation': https://openapi-generator.tech
        maxCardinality: 5
      properties:
        description:
          description: A narrative that explains in detail what the productSpecificationCharacteristic
            is
          type: string
        maxCardinality:
          description: The maximum number of instances a CharacteristicValue can take
            on. For example, zero to five phone numbers in a group calling plan, where
            five is the value for the maxCardinality.
          type: integer
        minCardinality:
          description: The minimum number of instances a CharacteristicValue can take
            on. For example, zero to five phone numbers in a group calling plan, where
            zero is the value for the minCardinality.
          type: integer
        name:
          description: Name of the associated productSpecificationCharacteristic
          type: string
        valueType:
          description: A kind of value that the characteristic can take on, such as
            numeric, text and so forth
          type: string
        productSpecCharacteristicValue:
          description: A number or text that can be assigned to a ProductSpecificationCharacteristic.
          items:
            $ref: '#/components/schemas/ProductSpecificationCharacteristicValue'
          type: array
        productSpecification:
          $ref: '#/components/schemas/ProductSpecificationRef'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    ProductSpecificationRef:
      description: 'Product specification reference: A ProductSpecification is a detailed
        description of a tangible or intangible object made available externally in
        the form of a ProductOffering to customers or other parties playing a party
        role.'
      example:
        '@referredType': '@referredType'
        targetProductSchema:
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
        version: version
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the related entity.
          type: string
        version:
          description: Version of the product specification
          type: string
        targetProductSchema:
          $ref: '#/components/schemas/TargetProductSchema'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ProductSpecificationRelationship:
      description: A migration, substitution, dependency or exclusivity relationship
        between/among product specifications.
      example:
        relationshipType: relationshipType
        '@baseType': '@baseType'
        validFor:
          startDateTime: 2000-01-23T04:56:07.000+00:00
          endDateTime: 2000-01-23T04:56:07.000+00:00
        '@type': '@type'
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of the productSpecification
          type: string
        href:
          description: Reference of the productSpecification
          type: string
        relationshipType:
          description: Type of relationship such as migration, substitution, dependency,
            exclusivity
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    Quantity:
      description: An amount in a given unit
      example:
        amount: 0.8008282
        units: units
      properties:
        amount:
          default: 1
          description: Numeric value in a given unit
          format: float
          type: number
        units:
          description: Unit
          type: string
      type: object
    RelatedParty:
      description: Related Entity reference. A related party defines party or party
        role linked to a specific entity.
      example:
        '@referredType': '@referredType'
        role: role
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of a related entity.
          type: string
        href:
          description: Reference of the related entity.
          type: string
        name:
          description: Name of the related entity.
          type: string
        role:
          description: Role played by the related party
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - '@referredType'
      - id
      type: object
    ResourceCandidateRef:
      description: 'ResourceCandidate reference: A resource candidate is an entity
        that makes a ResourceSpecification available to a catalog.'
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
        version: version
      properties:
        id:
          description: Unique identifier of the resource candidate
          type: string
        href:
          description: Reference of the resource candidate
          type: string
        name:
          description: Name of the resource candidate
          type: string
        version:
          description: Version of the resource candidate
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ResourceSpecificationRef:
      description: 'Resource Specification reference: The ResourceSpecification is
        required to realize a ProductSpecification.'
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
        version: version
      properties:
        id:
          description: Unique identifier of the resource specification
          type: string
        href:
          description: Reference of the resource specification
          type: string
        name:
          description: Name of the requiredResourceSpecification
          type: string
        version:
          description: Resource specification version
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    SLARef:
      description: 'ServiceLevelAgreement reference: A service level agreement (SLA)
        is a type of agreement that represents a formal negotiated agreement between
        two parties designed to create a common understanding about products, services,
        priorities, responsibilities, and so forth. The SLA is a set of appropriate
        procedures and targets formally or informally agreed between parties in order
        to achieve and maintain specified Quality of Service.'
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
      properties:
        id:
          description: Unique identifier of service level agreement
          type: string
        href:
          description: Reference of the service level agreement
          type: string
        name:
          description: Name of the service level agreement
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ServiceCandidateRef:
      description: ServiceCandidate reference. ServiceCandidate is an entity that
        makes a ServiceSpecification available to a catalog.
      example:
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
        version: version
      properties:
        id:
          description: Unique identifier of the service candidate
          type: string
        href:
          description: Unique reference of the service candidate
          type: string
        name:
          description: Name of the service candidate
          type: string
        version:
          description: Version of the service candidate
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    ServiceSpecificationRef:
      description: 'Service specification reference: ServiceSpecification(s) required
        to realize a ProductSpecification.'
      example:
        targetServiceSchema:
          '@baseType': '@baseType'
          '@type': '@type'
          '@schemaLocation': '@schemaLocation'
        '@referredType': '@referredType'
        '@baseType': '@baseType'
        '@type': '@type'
        name: name
        id: id
        href: href
        '@schemaLocation': https://openapi-generator.tech
        version: version
      properties:
        id:
          description: Unique identifier of the service specification
          type: string
        href:
          description: Reference of the serviceSpecification
          type: string
        name:
          description: Name of the requiredServiceSpecification
          type: string
        version:
          description: Service specification version
          type: string
        targetServiceSchema:
          $ref: '#/components/schemas/TargetServiceSchema'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
        '@referredType':
          description: The actual type of the target instance when needed for disambiguation.
          type: string
      required:
      - id
      type: object
    TargetProductSchema:
      description: The reference object to the schema and type of target product which
        is described by product specification
      example:
        '@baseType': '@baseType'
        '@type': '@type'
        '@schemaLocation': '@schemaLocation'
      properties:
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: This field provides a link to the schema describing the target
            product
          type: string
        '@type':
          description: Class type of the target product
          type: string
      required:
      - '@schemaLocation'
      - '@type'
      type: object
    TargetServiceSchema:
      description: The reference object to the schema and type of target service which
        is described by service specification
      example:
        '@baseType': '@baseType'
        '@type': '@type'
        '@schemaLocation': '@schemaLocation'
      properties:
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: This field provides a link to the schema describing the target
            service
          type: string
        '@type':
          description: Class type of the target service
          type: string
      required:
      - '@schemaLocation'
      - '@type'
      type: object
    TaxItem:
      description: A tax item is created for each tax rate and tax type used in the
        bill.
      example:
        taxRate: 5.962134
        '@baseType': '@baseType'
        '@type': '@type'
        taxAmount:
          unit: unit
          value: 1.4658129
        '@schemaLocation': https://openapi-generator.tech
        taxCategory: taxCategory
      properties:
        taxCategory:
          description: Tax category
          type: string
        taxRate:
          description: Applied rate of the tax
          format: float
          type: number
        taxAmount:
          $ref: '#/components/schemas/Money'
        '@baseType':
          description: When sub-classing, this defines the super-class
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name
          type: string
      type: object
    TimePeriod:
      description: A period of time, either as a deadline (endDateTime only) a startDateTime
        only, or both
      example:
        startDateTime: 2000-01-23T04:56:07.000+00:00
        endDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        endDateTime:
          description: End of the time period, using IETC-RFC-3339 format
          format: date-time
          type: string
        startDateTime:
          description: Start of the time period, using IETC-RFC-3339 format. If you
            define a start, you must also define an end
          format: date-time
          type: string
      type: object
    EventSubscription:
      description: Sets the communication endpoint address the service instance must
        use to deliver notification information
      properties:
        id:
          description: Id of the listener
          type: string
        callback:
          description: The callback being registered.
          type: string
        query:
          description: additional data to be passed
          type: string
      required:
      - callback
      - id
      type: object
    EventSubscriptionInput:
      description: Sets the communication endpoint address the service instance must
        use to deliver notification information
      properties:
        callback:
          description: The callback being registered.
          type: string
        query:
          description: additional data to be passed
          type: string
      required:
      - callback
      type: object
    CatalogCreateEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/CatalogCreateEventPayload'
      type: object
    CatalogCreateEventPayload:
      description: The event data structure
      properties:
        catalog:
          $ref: '#/components/schemas/Catalog'
      type: object
    CatalogDeleteEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/CatalogDeleteEventPayload'
      type: object
    CatalogDeleteEventPayload:
      description: The event data structure
      properties:
        catalog:
          $ref: '#/components/schemas/Catalog'
      type: object
    CatalogBatchEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/CatalogBatchEventPayload'
      type: object
    CatalogBatchEventPayload:
      description: The event data structure
      properties:
        catalog:
          $ref: '#/components/schemas/Catalog'
      type: object
    CategoryCreateEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/CategoryCreateEventPayload'
      type: object
    CategoryCreateEventPayload:
      description: The event data structure
      properties:
        category:
          $ref: '#/components/schemas/Category'
      type: object
    CategoryDeleteEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/CategoryDeleteEventPayload'
      type: object
    CategoryDeleteEventPayload:
      description: The event data structure
      properties:
        category:
          $ref: '#/components/schemas/Category'
      type: object
    ProductOfferingCreateEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/ProductOfferingCreateEventPayload'
      type: object
    ProductOfferingCreateEventPayload:
      description: The event data structure
      properties:
        productOffering:
          $ref: '#/components/schemas/ProductOffering'
      type: object
    ProductOfferingAttributeValueChangeEvent:
      description: The notification data structure
      properties:
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        fieldPath:
          description: The path identifying the object field concerned by this notification.
          type: string
        event:
          $ref: '#/components/schemas/ProductOfferingAttributeValueChangeEventPayload'
      type: object
    ProductOfferingAttributeValueChangeEventPayload:
      description: The event data structure
      properties:
        productOffering:
          $ref: '#/components/schemas/ProductOffering'
      type: object
    ProductOfferingStateChangeEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/ProductOfferingStateChangeEventPayload'
      type: object
    ProductOfferingStateChangeEventPayload:
      description: The event data structure
      properties:
        productOffering:
          $ref: '#/components/schemas/ProductOffering'
      type: object
    ProductOfferingDeleteEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/ProductOfferingDeleteEventPayload'
      type: object
    ProductOfferingDeleteEventPayload:
      description: The event data structure
      properties:
        productOffering:
          $ref: '#/components/schemas/ProductOffering'
      type: object
    ProductOfferingPriceCreateEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/ProductOfferingPriceCreateEventPayload'
      type: object
    ProductOfferingPriceCreateEventPayload:
      description: The event data structure
      properties:
        productOfferingPrice:
          $ref: '#/components/schemas/ProductOfferingPrice'
      type: object
    ProductOfferingPriceAttributeValueChangeEvent:
      description: The notification data structure
      properties:
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        fieldPath:
          description: The path identifying the object field concerned by this notification.
          type: string
        event:
          $ref: '#/components/schemas/ProductOfferingPriceAttributeValueChangeEventPayload'
      type: object
    ProductOfferingPriceAttributeValueChangeEventPayload:
      description: The event data structure
      properties:
        productOfferingPrice:
          $ref: '#/components/schemas/ProductOfferingPrice'
      type: object
    ProductOfferingPriceStateChangeEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/ProductOfferingPriceStateChangeEventPayload'
      type: object
    ProductOfferingPriceStateChangeEventPayload:
      description: The event data structure
      properties:
        productOfferingPrice:
          $ref: '#/components/schemas/ProductOfferingPrice'
      type: object
    ProductOfferingPriceDeleteEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/ProductOfferingPriceDeleteEventPayload'
      type: object
    ProductOfferingPriceDeleteEventPayload:
      description: The event data structure
      properties:
        productOfferingPrice:
          $ref: '#/components/schemas/ProductOfferingPrice'
      type: object
    ProductSpecificationCreateEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/ProductSpecificationCreateEventPayload'
      type: object
    ProductSpecificationCreateEventPayload:
      description: The event data structure
      properties:
        productSpecification:
          $ref: '#/components/schemas/ProductSpecification'
      type: object
    ProductSpecificationDeleteEvent:
      description: The notification data structure
      properties:
        id:
          description: Identifier of the Process flow
          type: string
        href:
          description: Reference of the ProcessFlow
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        correlationId:
          description: The correlation id for this event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        title:
          description: The title of the event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        event:
          $ref: '#/components/schemas/ProductSpecificationDeleteEventPayload'
      type: object
    ProductSpecificationDeleteEventPayload:
      description: The event data structure
      properties:
        productSpecification:
          $ref: '#/components/schemas/ProductSpecification'
      type: object
    Error:
      description: Used when an API throws an Error, typically with a HTTP error response-code
        (3xx, 4xx, 5xx)
      properties:
        code:
          description: Application relevant detail, defined in the API or a common
            list.
          type: string
        reason:
          description: Explanation of the reason for the error which can be shown
            to a client user.
          type: string
        message:
          description: More details and corrective actions related to the error which
            can be shown to a client user.
          type: string
        status:
          description: HTTP Error code extension
          type: string
        referenceError:
          description: URI of documentation describing the error.
          format: uri
          type: string
        '@baseType':
          description: When sub-classing, this defines the super-class.
          type: string
        '@schemaLocation':
          description: A URI to a JSON-Schema file that defines additional attributes
            and relationships
          format: uri
          type: string
        '@type':
          description: When sub-classing, this defines the sub-class entity name.
          type: string
      required:
      - code
      - reason
      type: object

