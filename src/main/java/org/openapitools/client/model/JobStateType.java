/*
 * CoalFired product catalog
 * This API contains a catalog of CoalFired's products and pricing
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support+coalfired@practiv.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Valid values for the state of a batch job (e.g. catalog import)
 */
@JsonAdapter(JobStateType.Adapter.class)
public enum JobStateType {
  
  NOT_STARTED("Not Started"),
  
  RUNNING("Running"),
  
  SUCCEEDED("Succeeded"),
  
  FAILED("Failed");

  private String value;

  JobStateType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static JobStateType fromValue(String value) {
    for (JobStateType b : JobStateType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<JobStateType> {
    @Override
    public void write(final JsonWriter jsonWriter, final JobStateType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public JobStateType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return JobStateType.fromValue(value);
    }
  }
}

